<style>
    label[for="filter--MULTI"] span{
        background-image: url('{{"multi.jpg" | asset_img_url}}');
        background-position: center;
    background-size: contain;
    }
</style>


{% if section.settings.show_custom_filter %}
            <div class="sf">
{% for block in section.blocks %}
<div style="position: relative;" class="mr-20">  
{% if block.settings.tag != blank %}
{% assign filter_tags = block.settings.tag | split: ","%} 

<button class="filter-heading CollectionToolbar__Item CollectionToolbar__Item--sort Heading Text--subdued u-h6 btn btn--tertiary collection-filter__item"><svg aria-hidden="true" focusable="false" role="presentation" class="icon icon-filter" viewBox="0 0 64 64"><path d="M48 42h10M48 42a5 5 0 1 1-5-5 5 5 0 0 1 5 5zM7 42h31M16 22H6M16 22a5 5 0 1 1 5 5 5 5 0 0 1-5-5zM57 22H26"/></svg> {{block.settings.filter-heading}}</button>

<div class="collection--customfilter_container sf ac jb fw" style="display:none" data-all-tags="{% for tag in collection.all_tags %}{{tag}} {%endfor%}">


    {% for tag in filter_tags %}
    <div class="collection--filter-checkbox_container sf ac jc">  
      <input type="checkbox" name="{{tag}}" class="{%if block.settings.is_color%} hide is_color {%endif%}collection--filter-checkbox" value="{{tag | handleize}}" id="filter--{{tag}}" {% if current_tags contains tag %}checked {% endif %}>
      <label for="filter--{{tag}}" style="cursor:pointer; display: flex; align-items: center;">{%if block.settings.is_color%} <span class="color-circle" style="background-color:{{tag}}"> </span> {%endif%} {{tag}}</label>
    </div>
    {% endfor %}

  <div class="tc mts" style="width:100%;" > <a id="apply--filter" class="Button Button--primary">APPLY</a></div>

</div>
{% endif %}
</div>  

{% endfor %}</div>
{% endif %}










<script>
var allCheckbox = document.querySelectorAll(".collection--filter-checkbox");
var items = [];
var allTags;
var url = `{{collection.url}}`;
var preSelectTags = [];


allCheckbox.forEach(function(checkbox){
    if(checkbox.checked){
        checkbox.setAttribute("checked", "checked")
        items.push(checkbox.value)
        preSelectTags.push(checkbox.name)
    }
})
if(preSelectTags.length > 0){
    preSelectTags = preSelectTags.join(", ")
    console.log(preSelectTags)
    // document.querySelector(".custom--current-tags").innerHTML = "Current Tags: " + preSelectTags;
}
allCheckbox.forEach(function(checkbox){
checkbox.addEventListener("change", function(e){

    var target = e.target;
    console.log(e.target)
    if(checkbox.checked){

        checkbox.setAttribute("checked", "checked")
        if(items.indexOf(checkbox) == -1){
            items.push(checkbox.value)
        }

}
else{
    items.includes(checkbox.value) && items.splice(items.indexOf(checkbox.value), 1)
    checkbox.removeAttribute("checked")
}
    allTags = items.join("+");
    console.log(items)
    console.log(allTags)
    url = `{{collection.url}}` + "/" + allTags;
    console.log(url)
})

})

document.querySelectorAll("#apply--filter").forEach(applyFilter =>{
    applyFilter.addEventListener("click", function(e){  
        window.location.href = url;
        console.log(e.target)
    })
})

// document.querySelectorAll('span.color-circle').forEach(color_circle =>{
//     color_circle.addEventListener('click', (e)=>{
//         if(e.target.parentElement.querySelector('input').getAttribute("checked") == "checked"){
//             e.target.parentElement.querySelector('input').removeAttribute("checked")
//         }
//         else{
//             e.target.parentElement.querySelector('input').setAttribute("checked","checked")
//         }
        
//     })

// })

document.querySelectorAll(".filter-heading").forEach(function(filterHeading){

    filterHeading.addEventListener("click",function(e){
        if(filterHeading.nextElementSibling.style.display == "none"){
            filterHeading.nextElementSibling.style.display = null;
        }
        else{
            filterHeading.nextElementSibling.style.display = "none";
        }
        })

    })

//             document.querySelector("body").addEventListener("click",function(e){
//               var target = e.target;
//               console.log(target)


//             document.querySelectorAll(".collection--customfilter_container").forEach(function(filter_wrapper){
                                                                     
//               if(filter_wrapper.style.display == "none"){
//                 filter_wrapper.style.display = "flex";     }
//               else{
//                 filter_wrapper.style.display = "none";     }


//             })



//               })



// document.querySelector("#reset-filters").addEventListener("click", function(){

// window.location.href = `{{collection.url}}`;

// })

</script>

<style>

.color-circle{
    display: block;
    width: 24px;
    height: 24px;
    border-radius: 50%;
    margin-right: 10px;
    position: relative;
    cursor: pointer;
}
input.is_color[checked="checked"]  + label .color-circle::after{
    position: absolute;
    content: '';
    height: 30px;
    width: 30px;
    left: 50%;
    border-radius: 50%;
    background-color: transparent;
    border: 2px solid black;
    top: 50%;
    transform: translate(-50%, -50%);
}
.jc {
    justify-items: center;
    justify-content: center;
}
.fw {
    flex-wrap: wrap;
}
.jb {
    justify-content: space-between;
}
.ac {
    align-items: center;
    align-content: center;
}
.sf {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
}

.collection--filter-checkbox_container label{
    margin-bottom: 0;
}

.EmptyState__Action.Button.Button--primary{
    display:none;
}
.filter-heading{
    border-top:0px;
    border-bottom:0px;
}
.collection--customfilter_container{
    position: absolute;
    top: 100%;
    border:1px solid lightgray;
    left: 50%;
    transform: translateX(-50%);
    background: white;
    width: auto;
    padding: 20px;
    z-index: 12;
}
#apply--filter{

    padding: 10px 20px;
    cursor: pointer;
}
.collection--filter-checkbox_container{
    padding:10px;
}
.collection--filter-checkbox{
    margin:0px;
    margin-right:10px;
    appearance:auto;
    cursor:pointer;

}
.custom--filter-wrapper .CollectionToolbar__Group .CollectionToolbar__Item{
    border: 0.5px solid lightgray;
    border-radius: 0px;
    padding: 5px 15px;
    margin:0px 10px;
    border-top:0px;
    border-bottom:0px;
}
@media(max-width:767px){
    .collection--customfilter_container{
        width:100%;
        padding: 8px 2px;
    }
    .CollectionToolbar__Group{
        flex-direction:column;
    }

    .custom--filter-wrapper .CollectionToolbar__Group .CollectionToolbar__Item{
        border: 0px;
        margin:10px;
    }

}
</style>

